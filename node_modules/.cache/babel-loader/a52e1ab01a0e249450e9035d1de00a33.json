{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pokemon/pokemon/src/components/PokeDash.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { loadPokedata } from \"../api\";\nimport { indiPoke, getPokemon } from \"../api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport { PokeCard } from \"./PokeCard\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  title: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"200px\",\n    top: \"opx\",\n    objectFit: \"cover\",\n    overflow: \"hidden\"\n  }\n}));\n\nconst getPokeData = async () => {\n  const data = await loadPokedata();\n  return data;\n};\n\nconst PokeDash = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    pokeData: \"\"\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokePerPage, setPokePerPage] = useState(12);\n  useEffect(async () => {\n    const pdata = await getPokeData();\n    setState({\n      pokeData: pdata.results\n    });\n  }, []);\n\n  const imageurl = async pokemon => {\n    let url;\n    url = await indiPoke(pokemon);\n    return url;\n  };\n\n  const handleChange = (event, value) => {\n    console.log(\"value\", value);\n    setCurrentPage(value);\n  }; //get current poke\n\n\n  const indexOfLastPoke = currentPage * pokePerPage;\n  const indexOfFirstPoke = indexOfLastPoke - pokePerPage;\n  const currentPokes = state.pokeData.slice(indexOfFirstPoke, indexOfLastPoke);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"News\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://www.pngnames.com/files/5/Pokemon-Logo-PNG-Free-Pic.png\",\n    width: \"500px\",\n    height: \"100%\",\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))), console.log(state.pokeData), console.log(\"currentpokes\", currentPokes), currentPokes && currentPokes.map(pokemon => {\n    return /*#__PURE__*/React.createElement(PokeCard, {\n      poke: pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    count: 66,\n    color: \"primary\",\n    page: currentPage,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PokeDash;","map":{"version":3,"sources":["/Users/admin/Desktop/pokemon/pokemon/src/components/PokeDash.js"],"names":["React","useState","useEffect","loadPokedata","indiPoke","getPokemon","makeStyles","Paper","Grid","axios","PokeCard","Pagination","AppBar","Toolbar","Typography","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","title","height","top","objectFit","overflow","getPokeData","data","PokeDash","classes","state","setState","pokeData","currentPage","setCurrentPage","pokePerPage","setPokePerPage","pdata","results","imageurl","pokemon","url","handleChange","event","value","console","log","indexOfLastPoke","indexOfFirstPoke","currentPokes","slice","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { loadPokedata } from \"../api\";\nimport { indiPoke, getPokemon } from \"../api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport { PokeCard } from \"./PokeCard\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"200px\",\n    top: \"opx\",\n    objectFit: \"cover\",\n    overflow: \"hidden\",\n  },\n}));\nconst getPokeData = async () => {\n  const data = await loadPokedata();\n\n  return data;\n};\n\nconst PokeDash = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    pokeData: \"\",\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokePerPage, setPokePerPage] = useState(12);\n  useEffect(async () => {\n    const pdata = await getPokeData();\n    setState({ pokeData: pdata.results });\n  }, []);\n\n  const imageurl = async (pokemon) => {\n    let url;\n    url = await indiPoke(pokemon);\n    return url;\n  };\n  const handleChange = (event, value) => {\n    console.log(\"value\", value);\n    setCurrentPage(value);\n  };\n  //get current poke\n  const indexOfLastPoke = currentPage * pokePerPage;\n  const indexOfFirstPoke = indexOfLastPoke - pokePerPage;\n  const currentPokes = state.pokeData.slice(indexOfFirstPoke, indexOfLastPoke);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <AppBar position=\"static\" style={{}}>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              News\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.title}>\n          <img\n            src=\"http://www.pngnames.com/files/5/Pokemon-Logo-PNG-Free-Pic.png\"\n            width=\"500px\"\n            height=\"100%\"\n            style={{}}\n          />\n        </Paper>\n      </Grid>\n      {console.log(state.pokeData)}\n      {console.log(\"currentpokes\", currentPokes)}\n      {currentPokes &&\n        currentPokes.map((pokemon) => {\n          return <PokeCard poke={pokemon} />;\n        })}\n\n      <Pagination\n        count={66}\n        color=\"primary\"\n        page={currentPage}\n        onChange={handleChange}\n      />\n    </Grid>\n  );\n};\n\nexport default PokeDash;\n"]},"metadata":{},"sourceType":"module"}