{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pokemon/pokemon/src/components/PokeDash.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { loadPokedata } from \"../api\";\nimport { indiPoke, getPokemon } from \"../api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport PokeCard from \"./PokeCard\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  title: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"200px\",\n    top: \"opx\",\n    objectFit: \"cover\",\n    overflow: \"hidden\"\n  }\n}));\n\nconst getPokeData = async () => {\n  const data = await loadPokedata();\n  return data;\n};\n\nconst PokeDash = props => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    pokeData: \"\"\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokePerPage, setPokePerPage] = useState(6);\n  useEffect(async () => {\n    const pdata = await getPokeData();\n    setState({\n      pokeData: pdata.results\n    });\n  }, []);\n\n  const imageurl = async pokemon => {\n    let url;\n    url = await indiPoke(pokemon);\n    return url;\n  };\n\n  const handleChange = (event, value) => {\n    console.log(\"value\", value);\n    setCurrentPage(value);\n  }; //get current poke\n\n\n  const indexOfLastPoke = currentPage * pokePerPage;\n  const indexOfFirstPoke = indexOfLastPoke - pokePerPage;\n  const currentPokes = state.pokeData.slice(indexOfFirstPoke, indexOfLastPoke);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    style: {\n      height: \"50px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      textAlign: \"center\",\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \" Your Score \", props.score)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://www.pngnames.com/files/5/Pokemon-Logo-PNG-Free-Pic.png\",\n    width: \"100\",\n    height: \"100%\",\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })))), console.log(state.pokeData), console.log(\"currentpokes\", currentPokes), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, currentPokes && currentPokes.map(pokemon => {\n    return /*#__PURE__*/React.createElement(PokeCard, {\n      poke: pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Pagination, {\n    count: 66,\n    color: \"primary\",\n    page: currentPage,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    score: state.score\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokeDash);","map":{"version":3,"sources":["/Users/admin/Desktop/pokemon/pokemon/src/components/PokeDash.js"],"names":["React","useState","useEffect","loadPokedata","indiPoke","getPokemon","makeStyles","Paper","Grid","axios","PokeCard","Pagination","AppBar","Toolbar","connect","Typography","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","title","height","top","objectFit","overflow","getPokeData","data","PokeDash","props","classes","state","setState","pokeData","currentPage","setCurrentPage","pokePerPage","setPokePerPage","pdata","results","imageurl","pokemon","url","handleChange","event","value","console","log","indexOfLastPoke","indexOfFirstPoke","currentPokes","slice","alignContent","justifyContent","score","width","map","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { loadPokedata } from \"../api\";\nimport { indiPoke, getPokemon } from \"../api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport PokeCard from \"./PokeCard\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"200px\",\n    top: \"opx\",\n    objectFit: \"cover\",\n    overflow: \"hidden\",\n  },\n}));\nconst getPokeData = async () => {\n  const data = await loadPokedata();\n\n  return data;\n};\n\nconst PokeDash = (props) => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    pokeData: \"\",\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokePerPage, setPokePerPage] = useState(6);\n  useEffect(async () => {\n    const pdata = await getPokeData();\n    setState({ pokeData: pdata.results });\n  }, []);\n\n  const imageurl = async (pokemon) => {\n    let url;\n    url = await indiPoke(pokemon);\n    return url;\n  };\n  const handleChange = (event, value) => {\n    console.log(\"value\", value);\n    setCurrentPage(value);\n  };\n  //get current poke\n  const indexOfLastPoke = currentPage * pokePerPage;\n  const indexOfFirstPoke = indexOfLastPoke - pokePerPage;\n  const currentPokes = state.pokeData.slice(indexOfFirstPoke, indexOfLastPoke);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <AppBar\n          position=\"static\"\n          style={{ height: \"50px\", textAlign: \"center\" }}\n        >\n          <Toolbar\n            style={{\n              textAlign: \"center\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <p> Your Score {props.score}</p>\n          </Toolbar>\n        </AppBar>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.title}>\n          <div style={{ width:\"500px\"}}>\n          <img\n            src=\"http://www.pngnames.com/files/5/Pokemon-Logo-PNG-Free-Pic.png\"\n           width=\"100\"\n            height=\"100%\"\n            style={{}}\n          />\n          </div>\n        </Paper>\n      </Grid>\n      {console.log(state.pokeData)}\n      {console.log(\"currentpokes\", currentPokes)}\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={8}>\n          {currentPokes &&\n            currentPokes.map((pokemon) => {\n              return <PokeCard poke={pokemon} />;\n            })}\n        </Grid>\n      </Grid>\n      <Pagination\n        count={66}\n        color=\"primary\"\n        page={currentPage}\n        onChange={handleChange}\n      />\n    </Grid>\n  );\n};\nfunction mapStateToProps(state, ownProps) {\n  return {\n    score: state.score,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokeDash);\n"]},"metadata":{},"sourceType":"module"}